<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端练习五 ：使用jQuery制作游戏角色</title>
      <link href="/2024/05/09/front-work07/"/>
      <url>/2024/05/09/front-work07/</url>
      
        <content type="html"><![CDATA[<style>body, html {margin: 0;padding: 0;width: 100%;height: 100%;overflow: hidden;background-color: black;}#player {position: absolute;top: 0;left: 0;}</style><script src="https://code.jquery.com/jquery-3.7.1.min.js"></script><body><img id="player" src="img/1.GIF" alt="" style="width: 250px"><script>    $(document).ready(function(){        $(document).click(function(event){            $("#player").stop().animate({top: event.pageY, left: event.pageX}, 1000);        });    });</script></body>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库ACID四大特性</title>
      <link href="/2024/05/09/note-ACID/"/>
      <url>/2024/05/09/note-ACID/</url>
      
        <content type="html"><![CDATA[<p>说起数据库四大特性，我们张口就来，ACID！那为什么要ACID？每种特性的原理又是什么？如何实现的？</p><p>ACID，是用来声明数据库事务的四大特性，即<code>原子性 (Atomicity)</code>、 <code>一致性(Consistency)</code>、<code>隔离性(Isolation)</code>和 <code>持久性(Durability)</code>。</p><h1>个人理解</h1><p>简单说，<code>事务就是一组原子性的SQL执行单元</code>。如果数据库引擎能够成功地对数据库应 用该组査询的全部语句，那么就执行该组SQL。如果其中有任何一条语句因为崩溃或其他原因无法执行，那么所有的语句都不会执行。<code>要么全部执行成功（commit），要么全部执行失败（rollback）</code>。</p><p>这里引用银行转账的例子，假设银行的数据库有两张表：信用卡(credit)表和储蓄(savings)表。用户要把信用卡里最后100块钱额度转到他的储蓄账户用来吃饭，那么需要至少三个步骤：</p><ol><li>检査信用卡余额是否髙于100块钱。</li><li>从信用卡账户余额中减去100块钱。</li><li>在储蓄账户余额中增加100块钱。</li></ol><p>上述三个步骤必须在同一个事务中执行，任何一个SQL失败，则必须回滚所有的SQL。这里用<code>START TRANSACTION</code>语句开启事务，要么使用<code>COMMIT</code>提交事务将修改的数据持久保留，要么使用<code>ROLLBACK</code>销所有的修改。事务SQL的样本如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">START</span> TRANSACTION;</span><br><span class="line"><span class="comment">-- 检查信用卡账户额度</span></span><br><span class="line"><span class="keyword">SELECT</span> balance <span class="keyword">FROM</span> credit <span class="keyword">WHERE</span> customer_id <span class="operator">=</span> <span class="string">&#x27;chenhh&#x27;</span>;</span><br><span class="line"><span class="comment">-- 信用卡表扣钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> credit <span class="keyword">SET</span> balance <span class="operator">=</span> balance <span class="operator">-</span> <span class="number">100.00</span> <span class="keyword">WHERE</span> customer_id <span class="operator">=</span> <span class="string">&#x27;chenhh&#x27;</span>;</span><br><span class="line"><span class="comment">-- 储蓄表加钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> savings <span class="keyword">SET</span> balance <span class="operator">=</span> balance <span class="operator">+</span> <span class="number">100.00</span> <span class="keyword">WHERE</span> customer_id <span class="operator">=</span> <span class="string">&#x27;chenhh&#x27;</span>;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><p>试想一下，如果执行到第四条语句时服务器崩溃了，会发生什么？废话，我被坑了100块钱，中午只能饿肚子！再假如，在执行到第三条语句和第四条语句之间时 ，同一时间，另外一个进程，来自商场结账的女朋友，也要信用卡账户的100块，那么结果可能就是银行在不知道这个逻辑的情况下白白给了我女朋友100块钱？</p><p>所以，别做梦了，主流关系型数据库（如MySQL、Oracle等）是通过了严格的ACID测试，不会随便出这种BUG的。那么我们今天就一起来搞懂ACID的核心原理。</p><h1>一、ACID特性</h1><ul><li><h2 id="原子性-Atomicity">原子性(Atomicity)</h2></li></ul><p><code>单个事务，为一个不可分割的最小工作单元</code>，整个事务中的所有操作要么全部commit成功，要么全部失败rollback，对于一个事务来说，不可能只执行其中的一部分SQL操作，这就是事务的原子性。</p><ul><li><h2 id="一致性-Consistency">一致性(Consistency)</h2></li></ul><p>数据库总是从一个一致性的状态转换到另外一个一致性的状态。在前面的例子中， 一致性确保了，即使在执行第三、四条语句之间时系统崩潰，信用卡账户也不会损失100块，因为事务最终没有提交，所以事务中所做的修改也不会保存到数据库中，保证数据一致性。</p><ul><li><h2 id="隔离性-Isolation">隔离性(Isolation)</h2></li></ul><p>通常来说，一个事务所做的修改在最终提交以前，对其他事务是不可见的。在前面的例子中，当执行完第三条语句、第四条语句还未开始时，此时有另外一个账户查询余额SQL开始运行，则其看到的信用卡账户的余额并没有被减去100元。后面我们讨论隔离级别(Isolation level)的时候，会发现为什么我们要说<code>事务通常来说是不可见的</code>。</p><ul><li><h2 id="持久性-Durability">持久性(Durability)</h2></li></ul><p>一旦事务提交，则其所做的修改就会永久保存到数据库中。此时即使系统崩溃，修改的数据也不会丢失。</p><p>事务的ACID特性可以确保银行不会弄丢你的钱。而在应用逻辑中，要实现这一点非常难,甚至可以说是不可能完成的任务。一个兼容ACID的数据库系统，需要做很多复杂但可能用户并没有觉察到的工作，才能确保ACID的实现。</p><h1>二、ACID具体实现</h1><p>对MySQL来说，<code>逻辑备份日志（binlog）、重做日志（redolog）、回滚日志（undolog）、锁技术 + MVCC就是MySQL实现事务的基础</code>。</p><ul><li>原子性：通过undolog来实现。</li><li>持久性：通过binlog、redolog来实现。</li><li>隔离性：通过(读写锁+MVCC)来实现。</li><li>一致性：<code>MySQL通过原子性，持久性，隔离性最终实现（或者说定义）数据一致性。</code></li></ul><h2 id="1、原子性原理">1、原子性原理</h2><p>事务通常是以BEGIN TRANSACTION 开始，以 COMMIT 或 ROLLBACK 结束。</p><ul><li><code>COMMIT 表示提交</code>，即提交事务的所有操作并持久化到数据库中。</li><li><code>ROLLBACK表示回滚</code>，即在事务中运行的过程中发生了某种故障，事务不能继续执行，系统将事务中对数据库所有已完成的操作全部撤销，回滚到事务开始时的状态，这里的操作指对数据库的更新操作，已执行的查询操作不用管。这时候也就需要用到 undolog 来进行回滚。</li></ul><p>undolog：</p><ol><li>每条数据变更（INSERT/UPDATE/DELETE/REPLACE）等操作都会生成一条undolog记录，在SQL执行前先于数据持久化到磁盘。</li><li>当事务需要回滚时，MySQL会根据回滚日志对事务中已执行的SQL做逆向操作，比如 DELETE 掉一行数据的逆向操作就是再把这行数据INSERT回去，其他操作同理。</li></ol><h2 id="2、持久性原理">2、持久性原理</h2><p>先了解一下MySQL的数据存储机制，MySQL的表数据是存放在磁盘上的，因此想要存取的时候都要经历磁盘 IO,然而即使是使用 SSD 磁盘 IO 也是非常消耗性能的。为此，为了提升性能 InnoDB 提供了缓冲池(Buffer Pool)，Buffer Pool 中包含了磁盘数据页的映射，可以当做缓存来使用：</p><ul><li>读数据：会首先从缓冲池中读取，如果缓冲池中没有，则从磁盘读取在放入缓冲池；</li><li>写数据：会首先写入缓冲池，缓冲池中的数据会定期同步到磁盘中；</li></ul><p>我们知道，MySQL表数据是持久化到磁盘中的，但如果所有操作都去操作磁盘，等并发上来了，那处理速度谁都吃不消，因此引入了<code>缓冲池(Buffer Pool)</code>的概念，Buffer Pool 中包含了磁盘中部分数据页的映射，可以当做缓存来用；这样当修改表数据时，我们把操作记录先写到Buffer Pool中，并标记事务已完成，等MySQL空闲时，再把更新操作持久化到磁盘里（<code>你可能会问，到底什么时候执行持久化呢？1、MySQL线程低于高水位；2、当有其他查询、更新语句操作该数据页时</code>），从而大大缓解了MySQL并发压力。</p><p>但是它也带来了新的问题，当MySQL系统宕机，断电时Buffer Pool数据不就丢了？</p><p>因为我们的数据已经提交了，但此时是在缓冲池里头，还没来得及在磁盘持久化，所以我们急需一种机制需要存一下已提交事务的数据，为恢复数据使用。</p><h2 id="3、隔离性原理">3、隔离性原理</h2><p>隔离性是事务ACID特性里最复杂的一个。在SQL标准里定义了四种隔离级别，每一种级别都规定一个事务中的修改，哪些是事务之间可见的，哪些是不可见的。</p><p>级别越低的隔离级别可以执行越高的并发，但同时实现复杂度以及开销也越大。</p><p>Mysql 隔离级别有以下四种（级别由低到高）：</p><table><thead><tr><th>隔离级别</th><th style="text-align:left">效果</th></tr></thead><tbody><tr><td>读未提交（RU）</td><td style="text-align:left">一个事务还没提交时，它做的变更就能被别的事务看到。（别的事务指同一时间进行的增删改查操作）</td></tr><tr><td>读提交（RC）</td><td style="text-align:left">一个事务提交（commit）之后，它做的变更才会被其他事务看到。</td></tr><tr><td>可重复读（RR）</td><td style="text-align:left">一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。当然在可重复读隔离级别下，未提交变更对其他事务也是不可见的。</td></tr><tr><td>串行（xíng）化（S）</td><td style="text-align:left">正如物理书上写的，串行是单线路，顾名思义在MySQL中同一时刻只允许单个事务执行，“写”会加“写锁”，“读”会加“读锁”。当出现读写锁冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行。</td></tr></tbody></table><p>搞懂了隔离级别以及实现原理其实就可以理解ACID里的隔离性了。前面说过原子性，隔离性，持久性的目的都是为了要做到一致性，但隔离型跟其他两个有所区别，原子性和持久性是为了要实现数据的正确、可用，比如要做到宕机后的恢复、事务的回滚等，保证数据是正确可用的！</p><p>那么隔离性是要做到什么呢？</p><p>隔离性要管理的是：多个并发读写请求（事务）过来时的执行顺序。像交警在马路口儿指挥交通一样，<code>当并发处理多个DML更新操作时，如何让事务操作他该看到的数据，出现多个事务处理同一条数据时，让事务该排队的排队，别插队捣乱，保证数据和事务的相对隔离，这就是隔离性要干的事儿。</code></p><p>所以，从隔离性的实现原理上，我们可以看出这是一场<code>数据的可靠性与性能之间的权衡。</code></p><h2 id="4、一致性原理">4、一致性原理</h2><p>一致性，我们要保障的是数据一致性，数据库中的增删改操作，<code>使数据库不断从一个一致性的状态转移到另一个一致性的状态。</code></p><p>事务该回滚的回滚，该提交的提交，提交后该持久化磁盘的持久化磁盘，该写缓冲池的写缓冲池+写日志；对于数据可见性，通过四种隔离级别进行控制，使得库表中的有效数据范围可控，保证业务数据的正确性的前提下，进而提高并发程度，支撑服务高QPS的稳定运行，保证数据的一致性，这就是咱们叨叨叨说的清楚想不明白的数据库ACID四大特性。</p><h1>总结</h1><p>希望通过本篇文章你熟知并搞懂了我们天天说的数据库ACID四大特性，本文中我们一起串联了起来，相信你不会在忘记某一个，打麻将三缺一怎么行？</p>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端练习四 ：使用jQuery修改表格</title>
      <link href="/2024/05/07/front-work06/"/>
      <url>/2024/05/07/front-work06/</url>
      
        <content type="html"><![CDATA[<meta charset="UTF-8"><title>练习4</title><style type="text/css">        body {            font-size: 13px;            line-height: 25px;        }        table {            border-top: 1px solid #333;            border-left: 1px solid #333;            width: 300px;        }        td {            border-right: 1px solid #333;            border-bottom: 1px solid #333;        }        .center {            text-align: center;        }    </style><script src="https://code.jquery.com/jquery-3.7.1.min.js"></script><body><table border="0" cellspacing="0" cellpadding="0" id="myTable">    <tr id="row1">        <td>书名</td>        <td>价格</td>    </tr>    <tr id="row2">        <td>看得见风景的房间</td>        <td class="center">&yen;30.00</td>    </tr>    <tr id="row3">        <td>60个瞬间</td>        <td class="center">&yen;32.00</td>    </tr></table><input name="b1" type="button" value="增加一行" onclick="addRow()"/><input name="b2" type="button" value="删除第2行" onclick="delRow()"/><input name="b3" type="button" value="修改标题样式" onclick="updateRow()"/><input name="b4" type="button" value="复制最后一行" onclick="copyRow()"/><script>    function addRow() {        let newRow = $("<tr>");        let col1 = $("<td>").html("幸福从天而降");        let col2 = $("<td>").html("&yen;18.5").attr("align", "center");        newRow.append(col1, col2);        $("#myTable").append(newRow);    }    function updateRow() {        $("#row1").attr("style", "font-weight:bold;text-align:center;background-color: #cccccc;");    }    function delRow() {        let dRow = $("tr");        if (dRow[2] != null) {            dRow[2].remove(); //删除行        }    }    function copyRow() {        let oldRow = $("#myTable tr:last");        let newRow = oldRow.clone();        $("#myTable").append(newRow)    }</script></body>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端实验四 ：Web广告</title>
      <link href="/2024/04/25/front-test04/"/>
      <url>/2024/04/25/front-test04/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <title>广告弹窗实验</title>    <style type="text/css">        body {            margin: 0;            padding: 0;        }        .web {            width: 1000px;            height: 1500px;            background-color: #CCCCCC;            border: #666666 1px solid;            margin: 0 auto;        }        /*对联广告样式*/        #ad1 {            position: fixed;            top: 50px;            width: 120px;            height: 240px;            background-image: url("img/left.png");            background-size: 120px 240px;        }        #ad2 {            position: fixed;            top: 50px;            width: 120px;            height: 240px;            background-image: url("img/right.png");            background-size: 120px 240px;        }        /*靠左*/        #ad1 {            left: 0;        }        /*靠右*/        #ad2 {            right: 0;        }        /*弹窗广告样式*/        #ad3 {            position: fixed;            bottom: 0; /*右下*/            right: 0;            height: 250px;            width: 320px;            background-image: url("img/down.png");            background-size: 320px 320px;            display: none;            animation: slideUp 1.5s ease-in-out forwards;        }        /*关闭按钮图片样式*/        #close1, #close2 {            width: 50px;            height: 20px;            object-fit: cover;            position: absolute;            bottom: 0;            right: 0;            background-image: url("img/close.png");            background-repeat: no-repeat;            background-size: 20px 20px;            background-position: center center;            z-index: 9999;        }        #close3 {            width: 50px;            height: 20px;            object-fit: cover;            position: absolute;            top: 0;            right: 0;            background-image: url("img/close.png");            background-repeat: no-repeat;            background-size: 30px 30px;            background-position: center center;        }        /*定义动画效果*/        @keyframes slideUp {            from{                bottom: -300px;            }            to{                bottom: 0;            }        }    </style></head><body><div id=ad1>    <div id="close1"></div></div><div class="web"></div><div id=ad2>    <div id="close2"></div></div><div id="ad3" style="display:none;">    <div id="close3"></div></div></body><script type="text/javascript">    //关闭左边    document.getElementById('close1').onclick = function () {        document.getElementById('ad1').style.display = "none";        document.getElementById('ad2').style.display = "none";    }    //关闭右边    document.getElementById('close2').onclick = function () {        document.getElementById('ad1').style.display = "none";        document.getElementById('ad2').style.display = "none";    }    //页面加载    window.onload=function (){        //关闭弹窗广告        document.getElementById('close3').onclick = function () {            document.getElementById('ad3').style.display = "none";        }        //1.5s弹出弹窗广告        setTimeout(function () {            document.getElementById('ad3').style.display = "inline"        }, 1000);    };</script></html>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端练习三 ：用键盘操纵坦克移动</title>
      <link href="/2024/04/17/front-work05/"/>
      <url>/2024/04/17/front-work05/</url>
      
        <content type="html"><![CDATA[<style type="text/css">        input {            font-size: 26px;            margin-top: 20px;        }        body {            background-image: url(img/grassland.png);            margin: 0;        }        #my_tank {            z-index: -1;            position: absolute;            left: 10px;            top: 100px;            transition: transform 0.5s; /* 添加过渡效果 */        }        .bullet {            position: absolute;            width: 10px;            height: 10px;            border-radius: 5px;            background-color: red;        }    </style><body><img id="my_tank" src="img/right.png" alt=""/></body><script>    removeTank();    // 默认坦克方向    let tankDirection = "right";    // 坦克移动函数    function removeTank() {        // 获取坦克元素        let my_tank = document.getElementById("my_tank");        // 监听键盘事件        window.addEventListener("keydown", (e) => {            // 获取left            let left = parseFloat(getComputedStyle(my_tank).left);            // 获取top            let top = parseFloat(getComputedStyle(my_tank).top);            switch (e.key) {                // 按下 'a' 键，向左移动                case 'a':                    tankDirection = "left";                    my_tank.style.transform = 'rotate(180deg)'; // 逆时针旋转180度                    // 不能超出屏幕                    if (left > 0) {                        my_tank.style.left = left - 10 + 'px'; // 减少 left 值以向左移动                    }                    break;                // 按下 'd' 键，向右移动                case 'd':                    tankDirection = "right";                    my_tank.style.transform = 'rotate(0deg)'; // 旋转角度为0                    // 不能超出屏幕                    if (left < 1470) {                        my_tank.style.left = left + 10 + 'px'; // 增加 left 值以向右移动                    }                    break;                // 按下 'w' 键，向上移动                case 'w':                    tankDirection = "up";                    my_tank.style.transform = 'rotate(-90deg)'; // 逆时针旋转90度                    // 不能超出屏幕                    if (top > 10) {                        my_tank.style.top = top - 10 + 'px'; // 减少 top 值以向上移动                    }                    break;                // 按下 's' 键，向下移动                case 's':                    tankDirection = "down";                    my_tank.style.transform = 'rotate(90deg)'; // 顺时针旋转90度                    // 不能超出屏幕                    if (top < 740) {                        my_tank.style.top = top + 10 + 'px'; // 增加 top 值以向下移动                    }                    break;                // 按下 ' ' 空格键，发射炮弹                case ' ':                    e.preventDefault();                    fireBullet(left, top, tankDirection);                    break;                // 默认情况下，提示只能使用方向键移动                // default:                //     alert('只能使用WASD移动，空格攻击！');            }        })    }    // 发射炮弹函数    function fireBullet(tankLeft, tankTop, direction) {        let bullet = document.createElement("div");        bullet.className = "bullet";        bullet.style.left = tankLeft + "px";        bullet.style.top = tankTop + "px";        // 根据坦克朝向设置炮弹的移动方向        switch (direction) {            case "left":                bullet.style.left = tankLeft - 10 + "px";                break;            case "right":                bullet.style.left = tankLeft + 40 + "px";                break;            case "up":                bullet.style.top = tankTop - 10 + "px";                break;            case "down":                bullet.style.top = tankTop + 40 + "px";                break;        }        document.body.appendChild(bullet);        // 设置炮弹的移动        let bulletMove = setInterval(() => {            let bulletTop = parseFloat(getComputedStyle(bullet).top);            let bulletLeft = parseFloat(getComputedStyle(bullet).left);            switch (direction) {                case "left":                    bullet.style.left = bulletLeft - 10 + "px";                    break;                case "right":                    bullet.style.left = bulletLeft + 10 + "px";                    break;                case "up":                    bullet.style.top = bulletTop - 10 + "px";                    break;                case "down":                    bullet.style.top = bulletTop + 10 + "px";                    break;            }            if (bulletTop <= 0 || bulletTop >= window.innerHeight || bulletLeft <= 0 || bulletLeft >= window.innerWidth) {                clearInterval(bulletMove);                document.body.removeChild(bullet);            }        }, 50);    }</script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端练习二 ：使用DOM操纵图片</title>
      <link href="/2024/04/14/front-work04/"/>
      <url>/2024/04/14/front-work04/</url>
      
        <content type="html"><![CDATA[<meta charset="UTF-8"><title>练习2</title><style type="text/css">        html, div, ul, li {            margin: 0px;            padding: 0px;        }        a {            cursor: pointer;        }        li {            list-style: none;            cursor: pointer;        }        fieldset {            border: #000 1px dashed;            width: 200px;            height: 200px;            padding: 10px;            text-align: center;            float: left;            margin-left: 5px;        }        #cont_left {            width: 200px;            height: 380px;            float: left;        }        #cont_right {            float: left;        }        .newcss1 {            background-color: yellowgreen;        }        img {            display: inline-block;margin: 0 auto 0;        }    </style><div style="display: flex;height: 560px">    <div id="cont_left" style="height: 380px;width: 200px">        <ul>            <div class="fac">                <img src="img/fold.gif" style="display: inline-block;margin: 0 auto 0;">                <a onclick="show('menu1')"> 通过DOM获取信息 </a>            </div>            <ul id="menu1">                <li onclick="showImg()" style="list-style: none">                    <img src="img/doc.gif" style="display: inline-block;margin: 0 auto 0;">获取原始图片路径                </li>                <li onclick="getFruit()" style="list-style: none">                     <img src="img/doc.gif" style="display: inline-block;margin: 0 auto 0;">获取我喜欢的水果                </li>            </ul>        </ul>        <ul>            <div class="fac">                <img src="img/fold.gif" style="display: inline-block;margin: 0 auto 0;">                <a onclick="show('menu2')"> 通过DOM操作元素 </a>            </div>            <ul id="menu2">                <li onclick="createImg()" style="list-style: none">                    <img src="img/doc.gif" style="display: inline-block;margin: 0 auto 0;">创建图片                </li>                <li onclick="cloneImg()" style="list-style: none">                     <img src="img/doc.gif" style="display: inline-block;margin: 0 auto 0;">克隆图片                </li>                <li onclick="changeImg()" style="list-style: none">                <img src="img/doc.gif" style="display: inline-block;margin: 0 auto 0;">改变图片                </li>                <li onclick="removeImg()" style="list-style: none">                <img src="img/doc.gif" style="display: inline-block;margin: 0 auto 0;">删除图片                </li>            </ul>        </ul>        <ul>            <div class="fac">                <img src="img/fold.gif" style="display: inline-block;margin: 0 auto 0;">                <a onclick="show('menu3')"> 通过DOM操作样式 </a>            </div>            <ul id="menu3">                <li onclick="changeCss1()" style="list-style: none">                    <img src="img/doc.gif" style="display: inline-block;margin: 0 auto 0;">为原始图片加上行间样式                </li>                <li onclick="changeCss2()" style="list-style: none">                    <img src="img/doc.gif" style="display: inline-block;margin: 0 auto 0;">为所有的fieldset加上内部样式                </li>            </ul>        </ul>    </div>    <div style="display: flex;flex-direction: column;">        <div style="display:flex;">            <fieldset>                <legend>原始图片</legend>                <img id="fruit" src="img/fruit.jpg" style="width: 150px">            </fieldset>            <fieldset>                <legend>创建图片</legend>                <div id="msg3" style="width: 150px"></div>            </fieldset>            <fieldset>                <legend>克隆图片</legend>                <div id="msg4" style="width: 150px"></div>            </fieldset>        </div>        <div style="display:flex;">            <fieldset>                <legend>图片路径</legend>                <p id="msg1" >在这里显示</p>            </fieldset>            <fieldset>                <legend>选择你喜欢的水果</legend>                <ul style="text-align: left;">                    <li style="list-style: none">                        <input name="enjoy" type="checkbox" value="苹果"/>苹果                    </li>                    <li style="list-style: none">                        <input name="enjoy" type="checkbox" value="香蕉" checked="checked"/>香蕉                    </li>                    <li style="list-style: none">                        <input name="enjoy" type="checkbox" value="葡萄"/>葡萄                    </li>                    <li style="list-style: none">                        <input name="enjoy" type="checkbox" value="梨" checked="checked"/>梨                    </li>                    <li style="list-style: none">                        <input name="enjoy" type="checkbox" value="西瓜"/>西瓜                    </li>                </ul>                <div id="msg2" style="text-align: left;"></div>            </fieldset>        </div>    </div></div> <script>        // 菜单收缩与扩展        function show(title) {            let currentMenu = document.getElementById(title);            let currentStatus = currentMenu.style.display;            currentMenu.style.display = currentStatus === "" ? "none" : "";        }        //获取原始图片路径        function showImg() {            // 获取图片            let fruit = document.getElementById('fruit');            // 获取图片src属性值            let fruitSrc = fruit.getAttribute('src');            // 获取msg1            let msg1 = document.getElementById('msg1');            // 将图片src属性值嵌入msg1的文本中            msg1.innerHTML = fruitSrc;        }        // 获取喜欢的水果        function getFruit() {            // 获取所有 ‘name’ 为 ‘enjoy’ 的复选框            let enjoyList = document.getElementsByName("enjoy");            let checkList = [];            // 循环enjoyList            for (let index in enjoyList) {                // 如果该下标的复选框被选中                if (enjoyList[index].checked) {                    // 添加到checkList中                    checkList.push(enjoyList[index].value);                }            }            // 获取msg2，并将其checkList的内容嵌入该元素            let msg2 = document.getElementById('msg2');            msg2.innerHTML = '您喜欢的水果是：' + checkList.toString();        }        // 用于跟踪图片是否已经添加的变量        let imgAdded = false;        //创建图片        function createImg() {            // 如果图片已经添加过，则不执行任何操作            if (imgAdded) {                return;            }            // 创建一个图片元素            let img = document.createElement('img');            // 设置图片的源            img.src = './img/grape.jpg';            // 将图片添加到页面中的特定位置            let div = document.getElementById('msg3');            div.appendChild(img);            imgAdded = true;        }        // 用于跟踪图片是否已经克隆        let imgCloned = false;        // 克隆图片        function cloneImg() {            // 如果图片已经克隆过，则不执行任何操作            if (imgCloned) {                return;            }            // 获取图片元素            let fruit = document.getElementById('fruit');            // 判断是否存在            isExit(fruit)            // 克隆图片            let clonedImg = fruit.cloneNode(true);            // 将克隆的图片添加到页面中的特定位置            let msg4 = document.getElementById('msg4');            msg4.appendChild(clonedImg);            // 标记已经克隆            imgCloned = true;        }        //改变图片        function changeImg() {            // 图片路径            let imgUrl = './img/grape.jpg';            // 获取图片            let fruit = document.getElementById('fruit');            // 判断是否存在            isExit(fruit)            // 修改src的值为新的路径            fruit.src = imgUrl;        }        //删除图片        function removeImg() {            // 获取图片元素            let img = document.getElementById('fruit');            // 获取图片元素的父元素            let parentElement = img.parentNode;            // 如果父元素存在，则从父元素中移除图片元素            if (parentElement) {                parentElement.removeChild(img);            }        }        //操作样式1        function changeCss1() {            let fruit = document.getElementById('fruit');            // 判断是否存在            isExit(fruit)            fruit.style.boxShadow = '10px 5px 5px #888888';        }        //操作样式2        function changeCss2() {            // 获取所有fieldset标签            let fieldsetList = document.getElementsByTagName('fieldset');            // 每个标签加上类名            for (let fieldset of fieldsetList) {                fieldset.className = 'newcss1';            }        }        function isExit(element) {            if (!element) {                let isConfim = confirm('该图片不存在，无法克隆！点击-确定-刷新界面！');                if (isConfim) {                    window.location.reload();                }                return false;            }        }    </script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端实验二 ：JavaScript常用对象的应用</title>
      <link href="/2024/04/07/front-work03/"/>
      <url>/2024/04/07/front-work03/</url>
      
        <content type="html"><![CDATA[<h1><strong>源码</strong></h1><h2 id="第1题"><code>第1题</code></h2><h3 id="1-Number">(1) Number()</h3><p><strong>Number() 函数将对象参数转换为表示对象值的数字。如果该值无法转换为合法数字，则返回 NaN。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>(<span class="literal">true</span>), <span class="title class_">Number</span>(<span class="literal">null</span>), +<span class="literal">undefined</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/9Gx2Q6rS.png" alt="1.(1)"></p><h3 id="2-Boolean">(2)Boolean()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="string">&#x27;100&#x27;</span>), <span class="title class_">Boolean</span>(<span class="number">100</span>), <span class="title class_">Boolean</span>(<span class="literal">null</span>), !!<span class="literal">undefined</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/5orOU7w7.png" alt="1.(2)"></p><h3 id="3-parseInt">(3)parseInt()</h3><ul><li>函数可解析一个字符串，并返回一个浮点数</li><li>注意： 字符串中只返回第一个数字。</li><li>注意： 开头和结尾的空格是允许的。</li><li>注意： 如果字符串的第一个字符不能被转换为数字，那么 parseFloat() 会返回 NaN。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="number">123.6</span>), <span class="built_in">parseInt</span>(<span class="number">0b1011011</span>), <span class="built_in">parseInt</span>(<span class="number">0X2A</span>), <span class="built_in">parseInt</span>(<span class="number">0X2A</span>, <span class="number">8</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/KxdNwOlJ.png" alt="1.(3)"></p><h3 id="4-parseFloat">(4)parseFloat()</h3><ul><li>函数解析字符串并返回浮点数。</li><li>注意：只返回字符串中的第一个数字！</li><li>注释：允许前导和尾随空格。</li><li>注释：如果第一个字符不能转换为数字，parseFloat() 返回 NaN。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&#x27;123.6&#x27;</span>), <span class="built_in">parseFloat</span>(<span class="string">&#x27;100px&#x27;</span>), <span class="built_in">parseFloat</span>(<span class="number">010</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/Y3PzyDKQ.png" alt="1.(4)"></p><h3 id="5-eval">(5)eval()</h3><p><strong>eval() 函数计算 JavaScript 字符串，并把它作为脚本代码来执行。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">eval</span>(<span class="string">&#x27;87*99+2&#x27;</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/7Bu2POAC.png" alt="1.(5)"></p><h3 id="6-isNaN">(6)isNaN()</h3><ul><li>isNaN() 函数可确定值是否为非数字（Not-a-Number）。</li><li>如果该值等于 NaN，则此函数返回 true。否则返回 false。</li><li>此函数不同于 Number 特定的 Number.isNaN() 方法。</li><li>全局 isNaN() 函数将测试值转换为数字，然后对其进行测试。</li><li>Number.isNaN() 不会将值转换为数字，并且不会为任何非数字类型的值返回 true。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="literal">null</span>), <span class="built_in">isNaN</span>(<span class="string">&#x27;123&#x27;</span>), <span class="built_in">isNaN</span>(<span class="string">&#x27;abc&#x27;</span>), <span class="built_in">isNaN</span>(<span class="string">&#x27;a1b2c3&#x27;</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/GR5G2nwW.png" alt="1.(6)"></p><h2 id="第2题"><code>第2题</code></h2><h3 id="1">(1)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = []</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1, arr1.<span class="property">length</span>)</span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr2[<span class="number">0</span>], arr2.<span class="property">length</span>)</span><br><span class="line"><span class="keyword">var</span> arr3 = <span class="keyword">new</span> <span class="title class_">Array</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr3[<span class="number">1</span>], arr3.<span class="property">length</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/OubgPvR8.png" alt="2.(1)"></p><h3 id="2">(2)</h3><p><strong>shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr2.<span class="title function_">shift</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr2)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/0ghKtFmT.png" alt="2.(2)"></p><h2 id="第3题"><code>第3题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="keyword">var</span> hours = date.<span class="title function_">getHours</span>();<span class="comment">//获取小时</span></span><br><span class="line"><span class="keyword">var</span> minutes = date.<span class="title function_">getMinutes</span>();<span class="comment">//获取分钟</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(hours + <span class="string">&#x27;:&#x27;</span> + minutes)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/gO15dORR.png" alt="3"></p><h2 id="第4题"><code>第4题</code></h2><h3 id="1-2">(1)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/^\d&#123;4&#125;$/</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;1234&#x27;</span>),</span><br><span class="line">    reg1.<span class="title function_">test</span>(<span class="string">&#x27;1a34&#x27;</span>),</span><br><span class="line">    reg1.<span class="title function_">test</span>(<span class="string">&#x27;12345&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/ryLp1DRr.png" alt="4.(1)"></p><h3 id="2-2">(2)</h3><ul><li>i 是一个修饰符 (搜索不区分大小写)。</li><li>[abc]    查找方括号之间的任何字符。</li><li>[^abc]    查找任何不在方括号之间的字符。</li><li>[0-9]    查找任何从 0 至 9 的数字。</li><li>[a-z]    查找任何从小写 a 到小写 z 的字符。</li><li>[A-Z]    查找任何从大写 A 到大写 Z 的字符。</li><li>[A-z]    查找任何从大写 A 到小写 z 的字符。</li><li>[adgk]    查找给定集合内的任何字符。</li><li>[^adgk]    查找给定集合外的任何字符。</li><li>(red|blue|green)    查找任何指定的选项。</li><li>\d 查找数字。</li><li>n$ 匹配任何结尾为 n 的字符串。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg2 = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;^[sp]\\d&#123;1,4&#125;$&quot;</span>, <span class="string">&quot;i&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;p123&#x27;</span>),</span><br><span class="line">    reg2.<span class="title function_">test</span>(<span class="string">&#x27;1234&#x27;</span>),</span><br><span class="line">    reg2.<span class="title function_">test</span>(<span class="string">&#x27;S10&#x27;</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/dj7j5UwD.png" alt="4.(2)"></p><h3 id="3">(3)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg3 = <span class="regexp">/^(133|153|189|180)\d&#123;8&#125;$/</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg3.<span class="title function_">test</span>(<span class="string">&#x27;13380281109&#x27;</span>),</span><br><span class="line">    reg3.<span class="title function_">test</span>(<span class="string">&#x27;17880281109&#x27;</span>),</span><br><span class="line">    reg3.<span class="title function_">test</span>(<span class="string">&#x27;15300000000&#x27;</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/TyJmOcg4.png" alt="4.(3)"></p><h2 id="第5题"><code>第5题</code></h2><ul><li>substring() 方法用于提取字符串中介于两个指定下标之间的字符。</li><li>substring() 方法返回的子串包括 开始 处的字符，但不包括 结束 处的字符。</li><li>lastIndexOf()    从后向前搜索字符串，并从起始位置（0）开始计算返回字符串最后出现的位置。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">QQEmil</span> = <span class="string">&quot;2445631968@qq.com&quot;</span></span><br><span class="line"><span class="keyword">var</span> number = <span class="title class_">QQEmil</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;@&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">QQ</span> = <span class="title class_">QQEmil</span>.<span class="title function_">substring</span>(<span class="string">&quot;&quot;</span>, number)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable constant_">QQ</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/1wvhygoA.png" alt="5"></p><h2 id="第6题"><code>第6题</code></h2><ul><li>random获取随机数floor(x)</li><li>对 x 进行下舍入。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">3</span> + <span class="number">1</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/TzuokPJa.png" alt="6"></p><h2 id="第7题"><code>第7题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">A</span>(<span class="params">y</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">B</span>(<span class="params">z</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y + z)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> B</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> C = <span class="title function_">A</span>(<span class="number">2</span>)</span><br><span class="line"><span class="title function_">C</span>(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/07/cjLZz1Lp.png" alt="7"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端实验一 ：JavaScript函数的应用</title>
      <link href="/2024/04/06/front-work02/"/>
      <url>/2024/04/06/front-work02/</url>
      
        <content type="html"><![CDATA[<h1><strong>源码</strong></h1><h2 id="第1题"><code>第1题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 1+2=3</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">num1, num2</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> sum = num1 + num2;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num1 + <span class="string">&quot;+&quot;</span> + num2 + <span class="string">&quot;=&quot;</span> + (num1 + num2));</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getSum</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/0vxIpG5E.png" alt="第1题"></p><h2 id="第2题"><code>第2题</code></h2><h3 id="错误代码">错误代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.源代码运行报错</span></span><br><span class="line"><span class="title function_">getProduct</span>(<span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">var</span> getProduct = <span class="keyword">function</span> (<span class="params">num1, num2</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num1 + <span class="string">&quot;*&quot;</span> + num2 + <span class="string">&quot;=&quot;</span> + num1 * num2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/BHDkmsc1.png" alt="第2题错误代码"></p><h3 id="修改如下">修改如下</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.修改方案如下，将getProduct()函数在声明之后调用</span></span><br><span class="line"><span class="keyword">var</span> getProduct = <span class="keyword">function</span> (<span class="params">num1, num2</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num1 + <span class="string">&quot;*&quot;</span> + num2 + <span class="string">&quot;=&quot;</span> + num1 * num2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getProduct</span>(<span class="number">2</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/12NtDHhK.png" alt="第2题正确代码"></p><h2 id="第3题"><code>第3题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3.</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    a = <span class="number">10</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">test</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/2jdePr8Y.png" alt="第3题"></p><h2 id="第4题"><code>第4题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//4. undefined 20</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="title function_">fun1</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">30</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/vuNlHowl.png" alt="第4题"></p><h2 id="第5题"><code>第5题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//5. 不报错</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>[<span class="number">0</span>]);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fun2</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/DxO4NUuL.png" alt="第5题"></p><h2 id="第6题"><code>第6题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//6.</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>, <span class="attr">c</span>: <span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> c <span class="keyword">in</span> a) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[c]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fun3</span>(obj)</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/510WvvEr.png" alt="第6题"></p><h2 id="第7题"><code>第7题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//7. num变量未定义 报错</span></span><br><span class="line"><span class="meta">&quot;use strict&quot;</span></span><br><span class="line">num = <span class="number">100</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/WM97W8F3.png" alt="第7题"></p><h2 id="第8题"><code>第8题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//8.</span></span><br><span class="line"><span class="meta">&quot;use strict&quot;</span></span><br><span class="line"><span class="title function_">myFunction</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span><br><span class="line">    y = <span class="number">5</span>;   <span class="comment">// y 未定义</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/DDlBB435.png" alt="第8题"></p><h2 id="第9题"><code>第9题</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//9.</span></span><br><span class="line"><span class="meta">&quot;use strict&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        a = <span class="number">20</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="comment">// var a = 10</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;报错咯😄&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;219970502❤️陈浩然&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>()</span><br></pre></td></tr></table></figure><p><img src="https://img2.imgtp.com/2024/04/06/yqKi4qZv.png" alt="第9题"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的笔记</title>
      <link href="/2024/03/31/note-note01/"/>
      <url>/2024/03/31/note-note01/</url>
      
        <content type="html"><![CDATA[<h1>我的笔记</h1>]]></content>
      
      
      <categories>
          
          <category> 个人笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇文章</title>
      <link href="/2024/03/29/java-Demo/"/>
      <url>/2024/03/29/java-Demo/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章">这是我的第一篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>前端作业一 ：使用JavaScript程序打印图形</title>
      <link href="/2024/02/04/front-work01/"/>
      <url>/2024/02/04/front-work01/</url>
      
        <content type="html"><![CDATA[<h1><strong>源码</strong></h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//219970502-陈浩然</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">num</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">prompt</span>(<span class="string">&#x27;请输入行数&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> number = <span class="title function_">num</span>();</span><br><span class="line"><span class="comment">// 三角形</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; number; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = i; j &lt; number - <span class="number">1</span>; j++) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&amp;nbsp;&amp;nbsp;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平行四边形</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; number; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; number - i; j++) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&amp;emsp;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; number; k++) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;*&amp;emsp;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br/&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//菱形</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span> - i; j++) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&amp;emsp;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;* &amp;emsp; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&amp;emsp;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span> - i; j++) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;* &amp;emsp; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br/&gt;219970502-陈浩然&quot;</span>);</span><br></pre></td></tr></table></figure><h1><strong>效果展示</strong></h1><p><img src="https://img2.imgtp.com/2024/04/02/I6frsbeN.png" alt="图片" title="图片"></p><h1><strong>源码效果</strong></h1><script>    //219970502-陈浩然    function num() {        return prompt('请输入行数');    }    var number = num()    // 三角形    for (let i = 0; i < number; i++) {        for (let j = i; j < number - 1; j++) {            document.write("&nbsp;&nbsp;")        }        for (let j = 0; j <= i; j++) {            document.write("*")            document.write("&nbsp;&nbsp;&nbsp;")        }        document.write("<br>")    }    document.write("<br/>");    // 平行四边形    for (let i = 0; i < number; i++) {        for (let j = 0; j < number - i; j++) {            document.write("&emsp;")        }        for (let k = 0; k < number; k++) {            document.write("*&emsp;")        }        document.write("<br>")    }    document.write("<br/>");    //菱形    for (let i = 1; i <= 3; i++) {        for (let j = 1; j <= 3 - i; j++) {            document.write("&emsp;")        }        for (let j = 1; j <= i; j++) {            document.write("* &emsp; ")        }        document.write("<br>")    }    for (let i = 1; i <= 3; i++) {        for (let j = 1; j <= i; j++) {            document.write("&emsp;")        }        for (let j = 1; j <= 3 - i; j++) {            document.write("* &emsp; ")        }        document.write("<br>")    }    document.write("<br/>219970502-陈浩然");</script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<!-- GitCalender容器 --><div id="gitZone"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/center-radar.css"/>
      <url>/css/center-radar.css</url>
      
        <content type="html"><![CDATA[.pace {-webkit-pointer-events: none;pointer-events: none;-webkit-user-select: none;-moz-user-select: none;user-select: none;z-index: 2000;position: fixed;height: 90px;width: 90px;margin: auto;top: 0;left: 0;right: 0;bottom: 0;}.pace.pace-inactive .pace-activity {display: none;}.pace .pace-activity {position: fixed;z-index: 2000;display: block;position: absolute;left: -30px;top: -30px;height: 90px;width: 90px;display: block;border-width: 30px;border-style: double;border-color: #29d transparent transparent;border-radius: 50%;-webkit-box-sizing: content-box;-moz-box-sizing: content-box;box-sizing: content-box;-webkit-animation: spin 1s linear infinite;-moz-animation: spin 1s linear infinite;-o-animation: spin 1s linear infinite;animation: spin 1s linear infinite;}.pace .pace-activity:before {content: ' ';position: absolute;top: 10px;left: 10px;height: 50px;width: 50px;display: block;border-width: 10px;border-style: solid;border-color: #29d transparent transparent;border-radius: 50%;-webkit-box-sizing: content-box;-moz-box-sizing: content-box;box-sizing: content-box;}@-webkit-keyframes spin {100% { -webkit-transform: rotate(359deg); }}@-moz-keyframes spin {100% { -moz-transform: rotate(359deg); }}@-o-keyframes spin {100% { -moz-transform: rotate(359deg); }}@keyframes spin {100% {  transform: rotate(359deg); }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/*页脚页头图透明*/#footer {    background: transparent !important;}#page-header {    background: transparent !important;}/*白天模式遮罩透明*/#footer::before{    background: transparent !important;}#page-header::before{    background: transparent !important;}/*夜间模式遮罩透明*/[data-theme="dark"] #footer::before{    background: transparent !important;}[data-theme="dark"] #page-header::before{    background: transparent !important;}/* 一级菜单居中 */#nav .menus_items {    /* 这个带不带都可以，本来就是inline */    /*display: inline;*/    position: absolute !important;    width: max-content !important;    left: 50% !important;    transform: translateX(-50%) !important;}#nav .menus_items .menus_item {    padding: 0 0 0 8px !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {    display: flex !important;}/* 这里的2是代表导航栏的第二个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(2) .menus_item_child {    left: -95px;}.menus_items .menus_item:nth-child(3) .menus_item_child {    left: -103px;}.menus_items .menus_item:nth-child(4) .menus_item_child {    left: -102px;}.menus_items .menus_item:nth-child(5) .menus_item_child {    left: -38px;}.menus_items .menus_item:nth-child(6) .menus_item_child {    left: -133px;}.menus_items .menus_item:nth-child(7) .menus_item_child {    left: -105px;}/* 滚动显示的标题居中 */center#name-container {    position: absolute !important;    width: fit-content !important;    left: 42% !important;    /* transform: translateX(-50%) !important; */    /* transform: translateY(-100%) !important; */}@media screen and (max-width: 768px) {    center#name-container {        display: none;    }}/*!* 导航栏颜色 *!*//*#page-header.nav-fixed #nav {*//*    background: linear-gradient(60deg, #ffd7e4 0, #c8f1ff 93%);*//*    opacity: 0.95;*//*    backdrop-filter: var(--backdrop-filter);*//*}*//*[data-theme="dark"] #page-header.nav-fixed #nav {*//*    background: rgba(0, 0, 0, 0.95) !important;*//*}*//* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;}div#menus {    font-family: "ZhuZiAYuanJWD";}h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {    font-family: ZhuZiAYuanJWD;}.iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;}.icon-zhongbiao::before {    color: #f7c768;}/* bilibli番剧插件 */#article-container .bangumi-tab.bangumi-active {    background: rgb(57, 197, 187);    color: rgb(57, 197, 187);    border-radius: 10px;}a.bangumi-tab:hover {    text-decoration: none !important;}.bangumi-button:hover {    background: rgb(57, 197, 187) !important;    border-radius: 10px !important;    color: rgb(57, 197, 187) !important;}a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;}.bangumi-button {    padding: 5px 10px !important;}a.bangumi-tab {    padding: 5px 10px !important;}svg.icon.faa-tada {    font-size: 1.1em;}.bangumi-info-item {    border-right: 1px solid #f2b94b;}.bangumi-info-item span {    color: #f2b94b;}.bangumi-info-item em {    color: #f2b94b;}/* 解决artitalk的图标问题 */#uploadSource > svg {    width: 1.19em;    height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {    background-color: transparent !important;}/* 首页文章卡片 */#recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {    background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {    background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {    background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {    background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {    background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;}[data-theme="dark"] .card-widget {    background: #121212 !important;}[data-theme="dark"] div#post {    background: #121212 !important;}[data-theme="dark"] div#tag {    background: #121212 !important;}[data-theme="dark"] div#archive {    background: #121212 !important;}[data-theme="dark"] div#page {    background: #121212 !important;}[data-theme="dark"] div#category {    background: #121212 !important;}[data-theme="dark"] div#category {    background: transparent !important;}/* 页脚透明 */#footer {    background: transparent !important;}/* 头图透明 */#page-header {    background: transparent !important;}#rightside > div > button {    border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {    width: 10px;    height: 10px;}::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;}::-webkit-scrollbar-corner {    background-color: transparent;}::-moz-selection {    color: #fff;    background-color: #3b70fc;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {  display: none !important;} */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {    z-index: 999999 !important;}/* 评论框  */.vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;}/* md网站下划线 */#article-container a:hover {    text-decoration: none !important;}#article-container #hpp_talk p img {    display: inline;}/* 404页面 */#error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);}#error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;}#error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;}#error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;}#error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);}#body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: url(https://img2.imgtp.com/2024/04/02/xRcxzh4T.JPG);    display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;}#body-wrap.error .aside-list .aside-list-item .content time {    display: none;}/* 代码框主题 */#article-container figure.highlight {    border-radius: 10px;}/* 翻页按钮居中 */#pagination {    width: 100%;    margin: auto;}/* 夜间模式菜单栏发光字 */[data-theme="dark"] #nav .site-page,[data-theme="dark"] #nav .menus_items .menus_item .menus_item_child li a {    text-shadow: 0 0 2px rgb(68, 235, 224) !important;}/* 手机端适配 */[data-theme="dark"] #sidebar #sidebar-menus .menus_items .site-page {    text-shadow: 0 0 2px rgb(68, 235, 224) !important;}/* 闪烁变动颜色连续渐变 */#site-name,#site-title,#site-subtitle,#post-info,.author-info__name,.author-info__description {    transition: text-shadow 1s linear !important;}/* 日间模式不生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {    animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {    animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {    animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {    animation: light_5px 10s linear infinite;}/* 关键帧描述 */@keyframes light_15px {    0% {        text-shadow: #5636ed 0 0 15px;    }    12.5% {        text-shadow: #11ee5e 0 0 15px;    }    25% {        text-shadow: #f14747 0 0 15px;    }    37.5% {        text-shadow: #f1a247 0 0 15px;    }    50% {        text-shadow: #f1ee47 0 0 15px;    }    50% {        text-shadow: #b347f1 0 0 15px;    }    62.5% {        text-shadow: #002afa 0 0 15px;    }    75% {        text-shadow: #ed709b 0 0 15px;    }    87.5% {        text-shadow: #39c5bb 0 0 15px;    }    100% {        text-shadow: #5636ed 0 0 15px;    }}@keyframes light_10px {    0% {        text-shadow: #5636ed 0 0 10px;    }    12.5% {        text-shadow: #11ee5e 0 0 10px;    }    25% {        text-shadow: #f14747 0 0 10px;    }    37.5% {        text-shadow: #f1a247 0 0 10px;    }    50% {        text-shadow: #f1ee47 0 0 10px;    }    50% {        text-shadow: #b347f1 0 0 10px;    }    62.5% {        text-shadow: #002afa 0 0 10px;    }    75% {        text-shadow: #ed709b 0 0 10px;    }    87.5% {        text-shadow: #39c5bb 0 0 10px;    }    100% {        text-shadow: #5636ed 0 0 10px;    }}@keyframes light_5px {    0% {        text-shadow: #5636ed 0 0 5px;    }    12.5% {        text-shadow: #11ee5e 0 0 5px;    }    25% {        text-shadow: #f14747 0 0 5px;    }    37.5% {        text-shadow: #f1a247 0 0 15px;    }    50% {        text-shadow: #f1ee47 0 0 5px;    }    50% {        text-shadow: #b347f1 0 0 5px;    }    62.5% {        text-shadow: #002afa 0 0 5px;    }    75% {        text-shadow: #ed709b 0 0 5px;    }    87.5% {        text-shadow: #39c5bb 0 0 5px;    }    100% {        text-shadow: #5636ed 0 0 5px;    }}/* 鼠标样式 */#cursor {    position: fixed;    width: 20px;    height: 20px;    /* 这里改变跟随的底色 */    background: rgb(68, 235, 224);    border-radius: 10px;    opacity: 0.25;    z-index: 10086;    pointer-events: none;    transition: 0.2s ease-in-out;    transition-property: background, opacity, transform;}#cursor.hidden {    opacity: 0;}#cursor.hover {    opacity: 0.1;    transform: scale(2.5);    -webkit-transform: scale(2.5);    -moz-transform: scale(2.5);    -ms-transform: scale(2.5);    -o-transform: scale(2.5);}#cursor.active {    opacity: 0.5;    transform: scale(0.5);    -webkit-transform: scale(0.5);    -moz-transform: scale(0.5);    -ms-transform: scale(0.5);    -o-transform: scale(0.5);}:root {    --trans-light: rgba(255, 255, 255, 0.88);    --trans-dark: rgba(25, 25, 25, 0.88);    --border-style: 1px solid rgb(169, 169, 169);    --backdrop-filter: blur(5px) saturate(150%);}/* 首页文章卡片 */#recent-posts > .recent-post-item {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 25px;    border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 18px;    border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border: var(--border-style);    border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {    background: rgba(255, 255, 255, 0.75);    backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {    background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {    background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {    background: transparent !important;}[data-theme="dark"] #page-header::before {    background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {    background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {    background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;}[data-theme="dark"] .read-mode div#post {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;}.pace {    -webkit-pointer-events: none;    pointer-events: none;    -webkit-user-select: none;    -moz-user-select: none;    user-select: none;    z-index: 2000;    position: fixed;    margin: auto;    top: 4px;    left: 0;    right: 0;    height: 8px;    border-radius: 8px;    width: 7rem;    background: #eaecf2;    border: 1px #e3e8f7;    overflow: hidden}.pace-inactive .pace-progress {    opacity: 0;    transition: .3s ease-in}.pace .pace-progress {    -webkit-box-sizing: border-box;    -moz-box-sizing: border-box;    -ms-box-sizing: border-box;    -o-box-sizing: border-box;    box-sizing: border-box;    -webkit-transform: translate3d(0, 0, 0);    -moz-transform: translate3d(0, 0, 0);    -ms-transform: translate3d(0, 0, 0);    -o-transform: translate3d(0, 0, 0);    transform: translate3d(0, 0, 0);    max-width: 200px;    position: absolute;    z-index: 2000;    display: block;    top: 0;    right: 100%;    height: 100%;    width: 100%;    /* linear-gradient(to right, #3494e6, #ec6ead) */    background: linear-gradient(to right, #4affc7, #74c8ff);    animation: gradient 2s ease infinite;    background-size: 200%}.pace.pace-inactive {    opacity: 0;    transition: .3s;    top: -8px}svg.icon {    width: 1.28em;    height: 1.28em;    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;}svg.social_icon {    width: 1.20em;    height: 1.20em;    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {    background: linear-gradient(            -45deg,            #e8d8b9,            #eccec5,            #a3e9eb,            #bdbdf0,            #eec1ea    );    box-shadow: 0 0 5px rgb(66, 68, 68);    position: relative;    background-size: 400% 400%;    -webkit-animation: Gradient 10s ease infinite;    -moz-animation: Gradient 10s ease infinite;    animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@-moz-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {    background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {    background-color: #3eb8be;    border-radius: 8px;}/* tzy页脚样式 */#ft {    max-width: 1200px;    margin: 0 auto 12px;    display: flex;    color: rgb(255 255 255 / 80%) !important;    text-align: left;    flex-wrap: wrap;}.ft-item-1,.ft-item-2 {    display: flex;    height: 100%;    padding: 2px 14px;}.ft-item-1 {    flex-direction: column;    flex: 2;}.ft-item-2 {    flex: 1;    flex-direction: column;}.t-top {    display: flex;}.t-top .t-t-l {    display: flex;    flex-direction: column;    flex: 1.4;    margin-right: 10px;}.t-top .t-t-l .bg-ad {    width: 85%;    border-radius: 10px;    padding: 0 10px;}.btn-xz-box {    margin-top: 10px;}/* 按钮背景颜色等 */.btn-xz {    display: block;    background-color: var(--btn-bg);    color: var(--btn-color);    text-align: center;    line-height: 2.4;    margin: 8px 0;}.btn-xz:hover {    text-decoration: none !important;}/* 按钮悬浮颜色 */.btn-xz-box:hover .btn-xz {    background-color: var(--text-bg-hover);}.t-top .t-t-r {    display: flex;    flex-direction: column;    flex: 1;}.ft-links {    padding: 0 14px;    list-style: none;    margin-top: 0 !important;}.ft-links li a {    display: inline-block !important;    width: 50%;}/* 链接悬浮颜色 */.ft-links li a:hover {    text-decoration: none !important;    color: rgb(57, 197, 187) !important;}.ft-item-2 .ft-img-group {    width: 100%;}.ft-t {    font-size: 1.1rem;    margin-bottom: 20px;    line-height: 1;    font-weight: 600;}.t-l-t {    padding-left: 14px;}.ft-item-2 .ft-img-group .img-group-item {    display: inline-block;    width: 18.4%;    margin-right: 14px;    margin-bottom: 6px;}.ft-item-2 .ft-img-group .img-group-item a {    display: inline-block;    width: 100%;    height: 100%;}.ft-item-2 .ft-img-group .img-group-item a img {    width: 100%;    max-height: 80px;    border-radius: 10px;}/* 头像悬浮颜色框 */.ft-item-2 .ft-img-group .img-group-item a img:hover {    border: 2px solid rgb(57, 197, 187);}@media screen and (max-width: 768px) {    .ft-item-1 {        flex-basis: 100% !important;    }    .ft-item-2 {        flex-basis: 100% !important;    }    .t-top .t-t-l .bg-ad {        width: 100%;    }}@media screen and (max-width: 576px) {    .t-top {        flex-wrap: wrap;    }    .t-top .t-t-l {        flex-basis: 100% !important;    }    .t-top .t-t-r {        margin-top: 16px;        flex-basis: 100% !important;    }}#footer-wrap a {    border-radius: 30px;}#footer-wrap {    padding: 20px 20px;}/* 页脚心跳动画 */#heartbeat {    color: red;    animation: iconAnimate 1s ease-in-out infinite;}@-moz-keyframes iconAnimate {    0%,    100% {        transform: scale(1);    }    10%,    30% {        transform: scale(0.9);    }    20%,    40%,    60%,    80% {        transform: scale(1.1);    }    50%,    70% {        transform: scale(1.1);    }}@-webkit-keyframes iconAnimate {    0%,    100% {        transform: scale(1);    }    10%,    30% {        transform: scale(0.9);    }    20%,    40%,    60%,    80% {        transform: scale(1.1);    }    50%,    70% {        transform: scale(1.1);    }}@-o-keyframes iconAnimate {    0%,    100% {        transform: scale(1);    }    10%,    30% {        transform: scale(0.9);    }    20%,    40%,    60%,    80% {        transform: scale(1.1);    }    50%,    70% {        transform: scale(1.1);    }}@keyframes iconAnimate {    0%,    100% {        transform: scale(1);    }    10%,    30% {        transform: scale(0.9);    }    20%,    40%,    60%,    80% {        transform: scale(1.1);    }    50%,    70% {        transform: scale(1.1);    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) {    }    return "";};class Cursor {    constructor() {        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        document.body.appendChild((this.scr = document.createElement("style")));        // 这里改变鼠标指针的颜色 由svg生成        this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='10px' height='10px'><circle cx='4' cy='4' r='4' opacity='1.0' fill='rgb(57, 197, 187)'/></svg>") 4 4, auto}`;    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove = e => {            (this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8);            this.pos.curr = {x: e.clientX - 8, y: e.clientY - 8};            this.cursor.classList.remove("hidden");        };        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown = e => this.cursor.classList.add("active");        document.onmouseup = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/progress_bar.css"/>
      <url>/css/progress_bar.css</url>
      
        <content type="html"><![CDATA[.pace {    -webkit-pointer-events: none;    pointer-events: none;    -webkit-user-select: none;    -moz-user-select: none;    user-select: none;    z-index: 2000;    position: fixed;    margin: auto;    top: 10px;    left: 0;    right: 0;    height: 8px;    border-radius: 8px;    width: 4rem;    background: #eaecf2;    border: 1px #e3e8f7;    overflow: hidden;}.pace-inactive .pace-progress {    opacity: 0;    transition: 0.3s ease-in;}.pace .pace-progress {    -webkit-box-sizing: border-box;    -moz-box-sizing: border-box;    -ms-box-sizing: border-box;    -o-box-sizing: border-box;    box-sizing: border-box;    -webkit-transform: translate3d(0, 0, 0);    -moz-transform: translate3d(0, 0, 0);    -ms-transform: translate3d(0, 0, 0);    -o-transform: translate3d(0, 0, 0);    transform: translate3d(0, 0, 0);    max-width: 200px;    position: absolute;    z-index: 2000;    display: block;    top: 0;    right: 100%;    height: 100%;    width: 100%;    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);    animation: gradient 1.5s ease infinite;    background-size: 200%;}.pace.pace-inactive {    opacity: 0;    transition: 0.3s;    top: -8px;}@keyframes gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {    // 当前时间    now.setTime(now.getTime() + 1000);    var start = new Date("03/28/2024 00:00:00"); // 旅行者1号开始计算的时间    var dis = Math.trunc(23400000000 + ((now - start) / 1000) * 17); // 距离=秒数*速度 记住转换毫秒    var unit = (dis / 149600000).toFixed(6);  // 天文单位    var grt = new Date("03/28/2024 00:00:00");// 网站诞生时间    var days = (now - grt) / 1e3 / 60 / 60 / 24,        dnum = Math.floor(days),        hours = (now - grt) / 1e3 / 60 / 60 - 24 * dnum,        hnum = Math.floor(hours);    1 == String(hnum).length && (hnum = "0" + hnum);    var minutes = (now - grt) / 1e3 / 60 - 1440 * dnum - 60 * hnum,        mnum = Math.floor(minutes);    1 == String(mnum).length && (mnum = "0" + mnum);    var seconds = (now - grt) / 1e3 - 86400 * dnum - 3600 * hnum - 60 * mnum,        snum = Math.round(seconds);    1 == String(snum).length && (snum = "0" + snum);    let currentTimeHtml = "";    (currentTimeHtml =        hnum < 18 && hnum >= 9            ? `<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/Brett-科研摸鱼中.svg' title='什么时候能够实现财富自由呀~'><br> <div style="font-size:13px;font-weight:bold">本站居然运行了 ${dnum} 天 ${hnum} 小时 ${mnum} 分 ${snum} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${dis} 千米，约为 ${unit} 个天文单位 🚀</div>`            : `<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/Brett-下班休息啦.svg' title='下班了就该开开心心地玩耍~'><br> <div style="font-size:13px;font-weight:bold">本站居然运行了 ${dnum} 天 ${hnum} 小时 ${mnum} 分 ${snum} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${dis} 千米，约为 ${unit} 个天文单位 🚀</div>`),    document.getElementById("workboard") &&    (document.getElementById("workboard").innerHTML = currentTimeHtml);}// 设置重复执行函数，周期1000mssetInterval(() => {    createtime();}, 1000);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/shake.js"/>
      <url>/js/shake.js</url>
      
        <content type="html"><![CDATA[// 防抖全局计时器let TT = null;    //time用来控制事件的触发// 防抖函数:fn->逻辑 time->防抖时间function debounce(fn, time) {    if (TT !== null) clearTimeout(TT);    TT = setTimeout(fn, time);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {    window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;    var n, e, i, h, t = .05, s = document.getElementById("universe"), o = !0, a = "180,184,240", r = "226,225,142",        d = "226,225,224", c = [];    function f() {        n = window.innerWidth, e = window.innerHeight, i = .216 * n, s.setAttribute("width", n), s.setAttribute("height", e)    }    function u() {        h.clearRect(0, 0, n, e);        for (var t = c.length, i = 0; i < t; i++) {            var s = c[i];            s.move(), s.fadeIn(), s.fadeOut(), s.draw()        }    }    function y() {        this.reset = function () {            this.giant = m(3), this.comet = !this.giant && !o && m(10), this.x = l(0, n - 10), this.y = l(0, e), this.r = l(1.1, 2.6), this.dx = l(t, 6 * t) + (this.comet + 1 - 1) * t * l(50, 120) + 2 * t, this.dy = -l(t, 6 * t) - (this.comet + 1 - 1) * t * l(50, 120), this.fadingOut = null, this.fadingIn = !0, this.opacity = 0, this.opacityTresh = l(.2, 1 - .4 * (this.comet + 1 - 1)), this.do = l(5e-4, .002) + .001 * (this.comet + 1 - 1)        }, this.fadeIn = function () {            this.fadingIn && (this.fadingIn = !(this.opacity > this.opacityTresh), this.opacity += this.do)        }, this.fadeOut = function () {            this.fadingOut && (this.fadingOut = !(this.opacity < 0), this.opacity -= this.do / 2, (this.x > n || this.y < 0) && (this.fadingOut = !1, this.reset()))        }, this.draw = function () {            if (h.beginPath(), this.giant) h.fillStyle = "rgba(" + a + "," + this.opacity + ")", h.arc(this.x, this.y, 2, 0, 2 * Math.PI, !1); else if (this.comet) {                h.fillStyle = "rgba(" + d + "," + this.opacity + ")", h.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, !1);                for (var t = 0; t < 30; t++) h.fillStyle = "rgba(" + d + "," + (this.opacity - this.opacity / 20 * t) + ")", h.rect(this.x - this.dx / 4 * t, this.y - this.dy / 4 * t - 2, 2, 2), h.fill()            } else h.fillStyle = "rgba(" + r + "," + this.opacity + ")", h.rect(this.x, this.y, this.r, this.r);            h.closePath(), h.fill()        }, this.move = function () {            this.x += this.dx, this.y += this.dy, !1 === this.fadingOut && this.reset(), (this.x > n - n / 4 || this.y < 0) && (this.fadingOut = !0)        }, setTimeout(function () {            o = !1        }, 50)    }    function m(t) {        return Math.floor(1e3 * Math.random()) + 1 < 10 * t    }    function l(t, i) {        return Math.random() * (i - t) + t    }    f(), window.addEventListener("resize", f, !1), function () {        h = s.getContext("2d");        for (var t = 0; t < i; t++) c[t] = new y, c[t].reset();        u()    }(), function t() {        document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark' && u(), window.requestAnimationFrame(t)    }()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/light.js"/>
      <url>/js/light.js</url>
      
        <content type="html"><![CDATA[// 霓虹灯效果// 颜色数组var arr = ["#39c5bb", "#f14747", "#f1a247", "#f1ee47", "#b347f1", "#1edbff", "#ed709b", "#5636ed"];// 颜色索引var idx = 0;// 切换颜色function changeColor() {    // 仅夜间模式才启用    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = arr[idx] + " 0 0 10px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = arr[idx] + " 0 0 5px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = arr[idx] + " 0 0 12px";            document.getElementsByClassName("author-info__description")[0].style.textShadow = arr[idx] + " 0 0 12px";        } catch {        }        idx++;        if (idx == 8) {            idx = 0;        }    } else {        // 白天模式恢复默认        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = "#1e1e1ee0 1px 1px 1px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = "";            document.getElementsByClassName("author-info__description")[0].style.textShadow = "";        } catch {        }    }}// 开启计时器window.onload = setInterval(changeColor, 1200);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
